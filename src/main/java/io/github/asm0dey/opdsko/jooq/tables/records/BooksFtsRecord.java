/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.tables.records;


import io.github.asm0dey.opdsko.jooq.tables.BooksFts;
import io.github.asm0dey.opdsko.jooq.tables.interfaces.IBooksFts;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BooksFtsRecord extends TableRecordImpl<BooksFtsRecord> implements Record3<String, String, Long>, IBooksFts {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>books_fts.name</code>.
     */
    public BooksFtsRecord setName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>books_fts.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>books_fts.sequence</code>.
     */
    public BooksFtsRecord setSequence(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>books_fts.sequence</code>.
     */
    @Override
    public String getSequence() {
        return (String) get(1);
    }

    /**
     * Setter for <code>books_fts.id</code>.
     */
    public BooksFtsRecord setId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>books_fts.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return BooksFts.BOOKS_FTS.NAME;
    }

    @Override
    public Field<String> field2() {
        return BooksFts.BOOKS_FTS.SEQUENCE;
    }

    @Override
    public Field<Long> field3() {
        return BooksFts.BOOKS_FTS.ID;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getSequence();
    }

    @Override
    public Long component3() {
        return getId();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getSequence();
    }

    @Override
    public Long value3() {
        return getId();
    }

    @Override
    public BooksFtsRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public BooksFtsRecord value2(String value) {
        setSequence(value);
        return this;
    }

    @Override
    public BooksFtsRecord value3(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BooksFtsRecord values(String value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IBooksFts from) {
        setName(from.getName());
        setSequence(from.getSequence());
        setId(from.getId());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BooksFtsRecord
     */
    public BooksFtsRecord() {
        super(BooksFts.BOOKS_FTS);
    }

    /**
     * Create a detached, initialised BooksFtsRecord
     */
    public BooksFtsRecord(String name, String sequence, Long id) {
        super(BooksFts.BOOKS_FTS);

        setName(name);
        setSequence(sequence);
        setId(id);
    }

    /**
     * Create a detached, initialised BooksFtsRecord
     */
    public BooksFtsRecord(io.github.asm0dey.opdsko.jooq.tables.pojos.BooksFts value) {
        super(BooksFts.BOOKS_FTS);

        if (value != null) {
            setName(value.getName());
            setSequence(value.getSequence());
            setId(value.getId());
        }
    }
}
